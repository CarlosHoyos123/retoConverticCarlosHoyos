{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductDescriptionComponent = class ProductDescriptionComponent {\n  constructor(route, _service, _Auth, _carService, router) {\n    this.route = route;\n    this._service = _service;\n    this._Auth = _Auth;\n    this._carService = _carService;\n    this.router = router;\n    this.load = false;\n    this.productId = 0;\n    this.productImage = \"../../../../assets/images/No_disponible.jpg\";\n    this.noItemsMesage = \"No disponible\";\n    //-------------\n    this.selectedColor = 0;\n    this.selectedSize = 0;\n    this.quantitySelected = 0;\n    this.quantityLimit = 0;\n    // ----------------\n    this.colors = [];\n    this.sizes = [];\n    this.stocks = [];\n    //------------------\n    this.toCarData = {\n      cliente: 0,\n      desde: '',\n      producto: 0,\n      talla: 0,\n      color: 0,\n      cantidad: 0\n    };\n    this.description = {\n      plu: '',\n      nombre: '',\n      fabricante: '',\n      precio: 0,\n      descripcion: '',\n      rutaFoto: \"../../../../assets/images/No_disponible.jpg\"\n    };\n  }\n  ngOnInit() {\n    this.productId = this.route.snapshot.params['id'];\n    this.productDetail();\n  }\n  toggleColor(color) {\n    this.selectedColor = color;\n    this.quantityShown();\n  }\n  toggleSize(size) {\n    this.selectedSize = size;\n    this.quantityShown();\n  }\n  quantityShown() {\n    this.quantityLimit = 0;\n    this.stocks.forEach(stock => {\n      if (stock.color == this.selectedColor && stock.talla == this.selectedSize) {\n        this.quantityLimit = stock.cantidad;\n      }\n    });\n  }\n  productDetail() {\n    this._service.ProductDetail(this.productId).subscribe(response => {\n      this.colors = response.colorsAvailable;\n      this.sizes = response.sizesAvailable;\n      this.description = response.productInfo;\n      this.stocks = response.quantityAvailable;\n      this.load = true;\n    }).add();\n  }\n  itemToCart() {\n    let session = this._Auth.session;\n    this.toCarData.cliente = session.cliente.cliente;\n    this.toCarData.color = this.selectedColor;\n    this.toCarData.talla = this.selectedSize;\n    this.toCarData.cantidad = this.quantitySelected;\n    this.toCarData.producto = this.productId;\n    this._carService.addToCar(this.toCarData).subscribe(response => {\n      alert(\"hemos agregado el producto\" + response.producto + \" en: \" + response.cantidad + \".\");\n    }).add();\n  }\n  goToCart() {\n    this.router.navigate(['Tienda/carrito']);\n  }\n};\nProductDescriptionComponent = __decorate([Component({\n  selector: 'app-product-description',\n  templateUrl: './product-description.component.html',\n  styleUrls: ['./product-description.component.css']\n})], ProductDescriptionComponent);\nexport { ProductDescriptionComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductDescriptionComponent","constructor","route","_service","_Auth","_carService","router","cliente","desde","producto","talla","color","cantidad","plu","nombre","fabricante","precio","descripcion","rutaFoto","ngOnInit","productId","snapshot","params","productDetail","toggleColor","selectedColor","quantityShown","toggleSize","size","selectedSize","quantityLimit","stocks","forEach","stock","ProductDetail","subscribe","response","colors","colorsAvailable","sizes","sizesAvailable","description","productInfo","quantityAvailable","load","add","itemToCart","session","toCarData","quantitySelected","addToCar","alert","goToCart","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\chrod\\OneDrive\\Documentos\\Repositorios\\FrontEcommerce\\src\\app\\modulos\\detailed\\product-description\\product-description.component.ts"],"sourcesContent":["import { Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport { productServicio } from 'src/app/servicios/product.service';\r\nimport { DetailResponse } from 'src/app/interface/detailResponse';\r\nimport { colorsAvailable } from 'src/app/interface/color';\r\nimport { Size } from 'src/app/interface/size';\r\nimport { productInfo } from 'src/app/interface/productDetailed';\r\nimport { ProductStock } from 'src/app/interface/productStock';\r\nimport { ItemToCar } from 'src/app/interface/itemToCar';\r\nimport { AuthServicio } from 'src/app/servicios/auth.service';\r\nimport { carServicio } from 'src/app/servicios/car.service';\r\n\r\n@Component({\r\n  selector: 'app-product-description',\r\n  templateUrl: './product-description.component.html',\r\n  styleUrls: ['./product-description.component.css']\r\n})\r\nexport class ProductDescriptionComponent {\r\n\r\n  load: boolean = false\r\n  productId:number = 0\r\n  productImage = \"../../../../assets/images/No_disponible.jpg\";\r\n  noItemsMesage: string = \"No disponible\"; \r\n  //-------------\r\n  selectedColor:number = 0;\r\n  selectedSize:number = 0;\r\n  quantitySelected:number = 0;\r\n  quantityLimit:number = 0;\r\n  // ----------------\r\n  colors: colorsAvailable[] =[];\r\n  sizes: Size[] =[];\r\n  stocks: ProductStock[] =[];\r\n  //------------------\r\n  toCarData: ItemToCar ={\r\n    cliente: 0,\r\n    desde: '',\r\n    producto: 0,\r\n    talla: 0,\r\n    color: 0,\r\n    cantidad: 0\r\n  }\r\n  description: productInfo = {\r\n      plu: '',\r\n      nombre: '',\r\n      fabricante: '',\r\n      precio: 0,\r\n      descripcion: '',\r\n      rutaFoto: \"../../../../assets/images/No_disponible.jpg\"\r\n  }\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private _service: productServicio,\r\n    private _Auth: AuthServicio,\r\n    private _carService: carServicio,\r\n    private router: Router\r\n  ) {  }\r\n\r\nngOnInit(){\r\n  this.productId = this.route.snapshot.params['id'];\r\n  this.productDetail();\r\n}\r\n\r\ntoggleColor(color:number){\r\n  this.selectedColor = color;\r\n  this.quantityShown();\r\n}\r\n\r\ntoggleSize(size: number){\r\n  this.selectedSize = size;\r\n  this.quantityShown();\r\n}\r\n\r\nquantityShown(){\r\n  this.quantityLimit = 0;\r\n  this.stocks.forEach((stock) =>{\r\n    if(stock.color == this.selectedColor && stock.talla == this.selectedSize){\r\n      this.quantityLimit = stock.cantidad;\r\n    }\r\n  });\r\n}\r\n\r\nproductDetail(){\r\nthis._service.ProductDetail(this.productId).\r\n  subscribe((response: DetailResponse)=>{\r\n    this.colors = response.colorsAvailable;\r\n    this.sizes = response.sizesAvailable;\r\n    this.description = response.productInfo;\r\n    this.stocks = response.quantityAvailable;\r\n    this.load = true;\r\n  }).add()\r\n}\r\n\r\nitemToCart(){\r\n  let session = this._Auth.session;\r\n  this.toCarData.cliente = session.cliente.cliente;\r\n  this.toCarData.color = this.selectedColor;\r\n  this.toCarData.talla = this.selectedSize;\r\n  this.toCarData.cantidad = this.quantitySelected\r\n  this.toCarData.producto = this.productId;\r\n  this._carService.addToCar(this.toCarData).\r\n    subscribe((response: ItemToCar)=>{\r\n      alert(\"hemos agregado el producto\"+response.producto+\" en: \"+response.cantidad+\".\")\r\n    }).add()\r\n}\r\n\r\ngoToCart(){\r\n  this.router.navigate(['Tienda/carrito']);\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}