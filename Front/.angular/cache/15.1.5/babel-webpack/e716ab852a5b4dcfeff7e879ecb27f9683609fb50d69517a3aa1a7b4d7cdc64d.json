{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProfileDescriptionComponent = class ProfileDescriptionComponent {\n  constructor(_Auth) {\n    this._Auth = _Auth;\n    this.passwordConfirm = '';\n    this.selectCountryInfo = [];\n    this.selectPhoneInfo = [];\n    this.selectDocumentInfo = [];\n    this.infoToUpdate = {\n      client: {\n        cliente: 0,\n        email: \"\",\n        contrasenia: \"\",\n        primerNombre: \"\",\n        segundoNombre: \"\",\n        primerApellido: \"\",\n        segundoApellido: \"\",\n        tipoTelefono: {\n          id: 0,\n          tipoTelefono: \"\"\n        },\n        telefono: \"\",\n        pais: {\n          id: 0,\n          nombrePais: \"\"\n        },\n        numeroDocumento: \"\",\n        tipoDocumento: {\n          id: 0,\n          tipoDocumento: \"\"\n        }\n      },\n      adresstosend: {\n        id: 0,\n        direccion: \"\",\n        zipCode: \"\",\n        cliente: 0,\n        pais: 0\n      },\n      adressToInvoice: {\n        id: 0,\n        direccion: \"\",\n        zipCode: \"\",\n        cliente: 0,\n        pais: 0\n      }\n    };\n  }\n  ngOnInit() {\n    let session = this._Auth.session;\n    this.infoToUpdate.client = session.client;\n    this.infoToUpdate.adressToInvoice = session.invoiceAdress;\n    this.infoToUpdate.adresstosend = session.sendAdress;\n    if (this._Auth.FormsData === null) {\n      this._Auth.formsInfo().subscribe(response => {\n        this._Auth.FormsData = response;\n      }).add();\n    } else {\n      console.log(\"en else\");\n      console.log(this._Auth.FormsData);\n      let formsInfo = this._Auth.FormsData;\n      this.selectCountryInfo = formsInfo.countries;\n      this.selectDocumentInfo = formsInfo.documents;\n      this.selectPhoneInfo = formsInfo.phones;\n    }\n  }\n  onSubmit() {\n    if (this.infoToUpdate.client.contrasenia == this.passwordConfirm) {\n      console.log(\"Vas a actualizar\");\n      this._Auth.updateUser(this.infoToUpdate).subscribe(response => {\n        console.log(response);\n        let currentSession = this._Auth.session;\n        currentSession.client = response.client;\n        currentSession.invoiceAdress = response.adressToInvoice;\n        currentSession.sendAdress = response.adresstosend;\n        this._Auth.session = currentSession;\n      });\n    } else {\n      alert(\"las contraseñas deben ser iguales\");\n    }\n  }\n};\nProfileDescriptionComponent = __decorate([Component({\n  selector: 'app-profile-description',\n  templateUrl: './profile-description.component.html'\n})], ProfileDescriptionComponent);\nexport { ProfileDescriptionComponent };","map":{"version":3,"mappings":"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","names":["Component","ProfileDescriptionComponent","constructor","_Auth","client","cliente","email","contrasenia","primerNombre","segundoNombre","primerApellido","segundoApellido","tipoTelefono","id","telefono","pais","nombrePais","numeroDocumento","tipoDocumento","adresstosend","direccion","zipCode","adressToInvoice","ngOnInit","session","infoToUpdate","invoiceAdress","sendAdress","FormsData","formsInfo","subscribe","response","add","console","log","selectCountryInfo","countries","selectDocumentInfo","documents","selectPhoneInfo","phones","onSubmit","passwordConfirm","updateUser","currentSession","alert","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\chrod\\Documents\\Repositorios\\Front\\front\\src\\app\\modulos\\detailed\\profile_description\\profile-description\\profile-description.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Country } from 'src/app/interface/country';\nimport { FormConfig } from 'src/app/interface/formsConfig';\nimport { IdType } from 'src/app/interface/idType';\nimport { AuthServicio } from 'src/app/servicios/auth.service';\nimport { PhoneType } from 'src/app/interface/phoneType';\nimport { ClientUpdate } from 'src/app/interface/clientUpdate';\n\n@Component({\n  selector: 'app-profile-description',\n  templateUrl: './profile-description.component.html',\n})\nexport class ProfileDescriptionComponent {\n  \n  constructor(\n    private _Auth: AuthServicio\n  ){ }\n\npasswordConfirm:  string = '';\nselectCountryInfo: Country[] = [];\nselectPhoneInfo: PhoneType[] = [];\nselectDocumentInfo: IdType[] = [];\ninfoToUpdate: ClientUpdate={\n  client: {\n    cliente:            0,\n    email:              \"\",\n    contrasenia:        \"\",\n    primerNombre:       \"\",\n    segundoNombre:      \"\",\n    primerApellido:     \"\",\n    segundoApellido:    \"\",\n    tipoTelefono:       {id: 0, tipoTelefono: \"\"},\n    telefono:           \"\",\n    pais:               {id: 0, nombrePais: \"\"},\n    numeroDocumento:    \"\",\n    tipoDocumento:      {id: 0, tipoDocumento: \"\"}\n  },\n  adresstosend: {\n    id:           0,\n    direccion:    \"\",\n    zipCode:      \"\",\n    cliente:      0,\n    pais:         0\n  },\n  adressToInvoice: {\n    id:           0,\n    direccion:    \"\",\n    zipCode:      \"\",\n    cliente:      0,\n    pais:         0\n  } \n}\n\n\n\n\n  ngOnInit(): void {\n    let session = this._Auth.session;\n    this.infoToUpdate.client = session.client;\n    this.infoToUpdate.adressToInvoice = session.invoiceAdress;\n    this.infoToUpdate.adresstosend = session.sendAdress;\n    \n    if (this._Auth.FormsData === null) {\n      this._Auth.formsInfo(). \n        subscribe((response: FormConfig)=>{\n          this._Auth.FormsData = response;\n       }).add()\n    }else{\n      console.log(\"en else\");\n      console.log(this._Auth.FormsData);\n      let formsInfo = this._Auth.FormsData;\n      this.selectCountryInfo = formsInfo.countries;\n      this.selectDocumentInfo = formsInfo.documents;\n      this.selectPhoneInfo = formsInfo.phones;\n    }\n  }\n\n  onSubmit(){\n    if(this.infoToUpdate.client.contrasenia == this.passwordConfirm){\n      console.log(\"Vas a actualizar\");\n    this._Auth.updateUser(this.infoToUpdate).\n      subscribe((response: ClientUpdate)=>{\n        console.log(response);\n        let currentSession = this._Auth.session;\n        currentSession.client = response.client;\n        currentSession.invoiceAdress = response.adressToInvoice;\n        currentSession.sendAdress = response.adresstosend;\n        this._Auth.session = currentSession;\n      })\n    }else{\n      alert(\"las contraseñas deben ser iguales\");\n    }\n  }\n        \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}