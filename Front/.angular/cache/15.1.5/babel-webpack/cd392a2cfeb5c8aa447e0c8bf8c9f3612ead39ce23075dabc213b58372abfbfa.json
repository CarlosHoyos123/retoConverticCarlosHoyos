{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegistroComponent = class RegistroComponent {\n  constructor(_AuthService) {\n    this._AuthService = _AuthService;\n    this.selectCountryInfo = [];\n    this.selectPhoneInfo = [];\n    this.selectDocumentInfo = [];\n    this.passwordConfirm = '';\n    this.newUser = {\n      cliente: 0,\n      email: \"\",\n      contrasenia: \"\",\n      primerNombre: \"\",\n      segundoNombre: \"\",\n      primerApellido: \"\",\n      segundoApellido: \"\",\n      tipoTelefono: {\n        id: 0,\n        tipoTelefono: \"\"\n      },\n      telefono: \"\",\n      pais: {\n        id: 0,\n        nombrePais: \"\"\n      },\n      numeroDocumento: \"\",\n      tipoDocumento: {\n        id: 0,\n        tipoDocumento: \"\"\n      }\n    };\n  }\n  ngOnInit() {\n    this._AuthService.formsInfo().subscribe(response => {\n      this.selectCountryInfo = response.countries;\n      this.selectDocumentInfo = response.documents;\n      this.selectPhoneInfo = response.phones;\n    }).add();\n  }\n  onSubmit() {\n    if (this.newUser.contrasenia == this.passwordConfirm) {\n      console.log(this.newUser);\n      this._AuthService.createUser(this.newUser).subscribe(response => {\n        alert(\"Se ha creado el usuario\");\n      }).add();\n    } else {\n      alert(\"las contraseñas deben ser iguales\");\n    }\n  }\n};\nRegistroComponent = __decorate([Component({\n  selector: 'app-registro',\n  templateUrl: './registro.component.html',\n  styleUrls: ['./registro.component.css']\n})], RegistroComponent);\nexport { RegistroComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAa1C,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAsB1BC,YACUC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IArBxB,sBAAiB,GAAc,EAAE;IACjC,oBAAe,GAAgB,EAAE;IACjC,uBAAkB,GAAa,EAAE;IACjC,oBAAe,GAAW,EAAE;IAE5B,YAAO,GAAiB;MACtBC,OAAO,EAAG,CAAC;MACXC,KAAK,EAAG,EAAE;MACVC,WAAW,EAAG,EAAE;MAChBC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAG,EAAE;MAClBC,cAAc,EAAG,EAAE;MACnBC,eAAe,EAAE,EAAE;MACnBC,YAAY,EAAE;QAACC,EAAE,EAAE,CAAC;QAAED,YAAY,EAAE;MAAE,CAAC;MACvCE,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;QAACF,EAAE,EAAE,CAAC;QAAEG,UAAU,EAAE;MAAE,CAAC;MAC7BC,eAAe,EAAE,EAAE;MACnBC,aAAa,EAAE;QAACL,EAAE,EAAE,CAAC;QAAEK,aAAa,EAAE;MAAE;KACzC;EAIG;EAEJC,QAAQ;IACJ,IAAI,CAACf,YAAY,CAACgB,SAAS,EAAE,CAC3BC,SAAS,CAAEC,QAAoB,IAAG;MAChC,IAAI,CAACC,iBAAiB,GAAGD,QAAQ,CAACE,SAAS;MAC3C,IAAI,CAACC,kBAAkB,GAAGH,QAAQ,CAACI,SAAS;MAC5C,IAAI,CAACC,eAAe,GAAGL,QAAQ,CAACM,MAAM;IACxC,CAAC,CAAC,CAACC,GAAG,EAAE;EACd;EAEAC,QAAQ;IACR,IAAG,IAAI,CAACC,OAAO,CAACxB,WAAW,IAAI,IAAI,CAACyB,eAAe,EAAC;MAClDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,OAAO,CAAC;MACzB,IAAI,CAAC3B,YAAY,CAAC+B,UAAU,CAAC,IAAI,CAACJ,OAAO,CAAC,CACxCV,SAAS,CAAEC,QAAsB,IAAG;QAClCc,KAAK,CAAC,yBAAyB,CAAC;MAClC,CAAC,CAAC,CAACP,GAAG,EAAE;KACX,MAAI;MACHO,KAAK,CAAC,mCAAmC,CAAC;;EAG5C;CACD;AA/CYlC,iBAAiB,eAL7BD,SAAS,CAAC;EACToC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACWrC,iBAAiB,CA+C7B;SA/CYA,iBAAiB","names":["Component","RegistroComponent","constructor","_AuthService","cliente","email","contrasenia","primerNombre","segundoNombre","primerApellido","segundoApellido","tipoTelefono","id","telefono","pais","nombrePais","numeroDocumento","tipoDocumento","ngOnInit","formsInfo","subscribe","response","selectCountryInfo","countries","selectDocumentInfo","documents","selectPhoneInfo","phones","add","onSubmit","newUser","passwordConfirm","console","log","createUser","alert","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\chrod\\Documents\\Repositorios\\Front\\front\\src\\app\\modulos\\auth\\registro\\registro.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ClientEntity } from 'src/app/interface/clientEntity';\r\nimport { Country } from 'src/app/interface/country';\r\nimport { FormConfig } from 'src/app/interface/formsConfig';\r\nimport { IdType } from 'src/app/interface/idType';\r\nimport { PhoneType } from 'src/app/interface/phoneType';\r\nimport { AuthServicio } from 'src/app/servicios/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.css']\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n\r\n  selectCountryInfo: Country[] = [];\r\n  selectPhoneInfo: PhoneType[] = [];\r\n  selectDocumentInfo: IdType[] = [];\r\n  passwordConfirm:  String= '';\r\n\r\n  newUser: ClientEntity = {\r\n    cliente:  0,\r\n    email:  \"\",\r\n    contrasenia:  \"\",\r\n    primerNombre: \"\",\r\n    segundoNombre:  \"\",\r\n    primerApellido:  \"\",\r\n    segundoApellido: \"\",\r\n    tipoTelefono: {id: 0, tipoTelefono: \"\"},\r\n    telefono: \"\",\r\n    pais: {id: 0, nombrePais: \"\"},\r\n    numeroDocumento: \"\",\r\n    tipoDocumento: {id: 0, tipoDocumento: \"\"}\r\n  }\r\n\r\n    constructor(\r\n      private _AuthService: AuthServicio)\r\n    { }\r\n\r\n  ngOnInit(){\r\n      this._AuthService.formsInfo(). \r\n        subscribe((response: FormConfig)=>{\r\n          this.selectCountryInfo = response.countries;\r\n          this.selectDocumentInfo = response.documents;\r\n          this.selectPhoneInfo = response.phones;\r\n        }).add()\r\n  }\r\n\r\n  onSubmit(){    \r\n  if(this.newUser.contrasenia == this.passwordConfirm){\r\n    console.log(this.newUser);\r\n    this._AuthService.createUser(this.newUser). \r\n      subscribe((response: ClientEntity)=>{\r\n        alert(\"Se ha creado el usuario\");\r\n      }).add()\r\n  }else{\r\n    alert(\"las contraseñas deben ser iguales\");\r\n  }\r\n    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}