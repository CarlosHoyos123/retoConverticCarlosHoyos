{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, LOCALE_ID, Inject } from '@angular/core';\nimport { formatDate } from '@angular/common';\nlet CartDescriptionComponent = class CartDescriptionComponent {\n  constructor(_router, _carService, _Auth, locale) {\n    this._router = _router;\n    this._carService = _carService;\n    this._Auth = _Auth;\n    this.locale = locale;\n    this.items = [];\n    this.cliente = 0;\n    this.sendAdress = 0;\n    this.subTotal = 0;\n    this.iva = 0.19;\n    this.totalItemsToBuy = 0;\n    this.invoiceAdress = 0;\n    this.invoiceDefaultState = 1;\n    this.carItems = {\n      cliente: 0,\n      desde: '',\n      producto: 0,\n      talla: 0,\n      color: 0,\n      cantidad: 0\n    };\n    this.confirmInformation = {\n      invoice: {\n        fecha: '',\n        cliente: 0,\n        total: 0,\n        estado: 0,\n        dir_envio: 0,\n        dir_facturacion: 0\n      },\n      invoiceDetail: []\n    };\n  }\n  ngOnInit() {\n    let session = this._Auth.session;\n    this.cliente = session.client.cliente;\n    this.sendAdress = session.sendAdress.id;\n    this.invoiceAdress = session.invoiceAdress.id;\n    this._carService.checkClientCar(session.client.cliente).subscribe(response => {\n      this.items = response;\n      this.calculations();\n    });\n  }\n  goToHome() {\n    this._router.navigate(['Tienda/home/man']);\n  }\n  terminateSell() {\n    let date = formatDate(new Date(), 'yyyy-MM-dd', this.locale);\n    ;\n    this.confirmInformation.invoiceDetail = [];\n    this.confirmInformation.invoice.cliente = this.cliente;\n    this.confirmInformation.invoice.dir_envio = this.sendAdress;\n    this.confirmInformation.invoice.dir_facturacion = this.invoiceAdress;\n    this.confirmInformation.invoice.fecha = date;\n    this.confirmInformation.invoice.estado = this.invoiceDefaultState;\n    this.items.forEach(item => {\n      let detailItem = {\n        factura: '',\n        producto: 0,\n        cantidad: 0,\n        total: 0\n      };\n      detailItem.producto = item.producto.id;\n      detailItem.cantidad = item.cantidad;\n      this.confirmInformation.invoiceDetail.push(detailItem);\n    });\n    console.log(this.confirmInformation);\n    this._carService.sellConfirm(this.confirmInformation).subscribe(response => {});\n  }\n  deleteItemInCar(id) {\n    this._carService.deleteItem(id).subscribe(response => {\n      alert(\"Se ha eliminado el item\" + response.producto.producto);\n    });\n    this._carService.checkClientCar(this.cliente).subscribe(response => {\n      this.items = response;\n    });\n  }\n  calculations() {\n    this.totalItemsToBuy = 0;\n    this.subTotal = 0;\n    this.items.forEach(item => {\n      console.log(item);\n      this.totalItemsToBuy += item.cantidad;\n      this.subTotal += item.producto.precio * item.cantidad;\n    });\n  }\n};\nCartDescriptionComponent = __decorate([Component({\n  selector: 'app-cart-description',\n  templateUrl: './cart-description.component.html'\n}), __param(3, Inject(LOCALE_ID))], CartDescriptionComponent);\nexport { CartDescriptionComponent };","map":{"version":3,"mappings":"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","names":["Component","LOCALE_ID","Inject","formatDate","CartDescriptionComponent","constructor","_router","_carService","_Auth","locale","cliente","desde","producto","talla","color","cantidad","invoice","fecha","total","estado","dir_envio","dir_facturacion","invoiceDetail","ngOnInit","session","client","sendAdress","id","invoiceAdress","checkClientCar","subscribe","response","items","calculations","goToHome","navigate","terminateSell","date","Date","confirmInformation","invoiceDefaultState","forEach","item","detailItem","factura","push","console","log","sellConfirm","deleteItemInCar","deleteItem","alert","totalItemsToBuy","subTotal","precio","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\Users\\chrod\\Documents\\Repositorios\\Front\\front\\src\\app\\modulos\\detailed\\cart-description\\cart-description.component.ts"],"sourcesContent":["import { Component, OnInit, LOCALE_ID, Inject } from '@angular/core';\r\nimport { AuthServicio } from 'src/app/servicios/auth.service';\r\nimport { carServicio } from 'src/app/servicios/car.service';\r\nimport { ItemToCar } from 'src/app/interface/itemToCar';\r\nimport { CarResponse } from 'src/app/interface/carResponse';\r\nimport { SellConfirmation } from 'src/app/interface/sellConfirmation';\r\nimport { Router } from '@angular/router';\r\nimport { InvoiceDetail } from 'src/app/interface/invoiceDetail';\r\nimport { formatDate } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-cart-description',\r\n  templateUrl: './cart-description.component.html',\r\n})\r\nexport class CartDescriptionComponent implements OnInit{\r\n\r\n  items: CarResponse[]= [];\r\n  cliente: number=0;\r\n  sendAdress: number=0;\r\n  subTotal:number = 0;\r\n  iva:number = 0.19;\r\n  totalItemsToBuy: number = 0;\r\n  invoiceAdress: number=0;\r\n  invoiceDefaultState:number = 1;\r\n  carItems: ItemToCar= {\r\n      cliente:0,\r\n      desde: '',\r\n      producto: 0,\r\n      talla: 0,\r\n      color: 0,\r\n      cantidad: 0\r\n  };\r\n  confirmInformation: SellConfirmation = {\r\n    invoice: {\r\n      fecha: '',\r\n      cliente: 0,\r\n      total: 0,\r\n      estado: 0,\r\n      dir_envio: 0,\r\n      dir_facturacion: 0\r\n    },\r\n    invoiceDetail: []\r\n  }\r\n\r\n  constructor(\r\n    private _router: Router,\r\n    private _carService: carServicio,\r\n    private _Auth: AuthServicio,\r\n    @Inject(LOCALE_ID) public locale: string\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    let session = this._Auth.session;\r\n    this.cliente = session.client.cliente;\r\n    this.sendAdress = session.sendAdress.id;\r\n    this.invoiceAdress = session.invoiceAdress.id;\r\n    this._carService.checkClientCar(session.client.cliente). \r\n    subscribe((response: CarResponse[])=>{\r\n      this.items = response;\r\n      this.calculations();\r\n    });\r\n  }\r\n\r\n  goToHome(){\r\n    this._router.navigate(['Tienda/home/man']);\r\n  }\r\n\r\n  terminateSell(){\r\n    let date = formatDate(new Date(), 'yyyy-MM-dd', this.locale);;\r\n    this.confirmInformation.invoiceDetail = [];\r\n    this.confirmInformation.invoice.cliente = this.cliente;\r\n    this.confirmInformation.invoice.dir_envio = this.sendAdress;\r\n    this.confirmInformation.invoice.dir_facturacion = this.invoiceAdress;\r\n    this.confirmInformation.invoice.fecha = date;\r\n    this.confirmInformation.invoice.estado = this.invoiceDefaultState;\r\n    this.items.forEach(item => {\r\n      let detailItem: InvoiceDetail ={factura: '',producto: 0, cantidad: 0,total: 0};\r\n      detailItem.producto = item.producto.id;\r\n      detailItem.cantidad = item.cantidad;\r\n      this.confirmInformation.invoiceDetail.push(detailItem);\r\n    });\r\n    \r\n    \r\n    console.log(this.confirmInformation);\r\n    this._carService.sellConfirm(this.confirmInformation).\r\n      subscribe((response:SellConfirmation)=>{\r\n\r\n      })\r\n  }\r\n  \r\n  deleteItemInCar(id: CarResponse){\r\n    this._carService.deleteItem(id). \r\n    subscribe((response: CarResponse)=>{\r\n      alert(\"Se ha eliminado el item\"+response.producto.producto);\r\n    })\r\n    this._carService.checkClientCar(this.cliente). \r\n    subscribe((response: CarResponse[])=>{\r\n      this.items = response;\r\n    })\r\n  }\r\n\r\n  calculations(){\r\n    this.totalItemsToBuy = 0;\r\n    this.subTotal = 0;\r\n    this.items.forEach(item => {\r\n      console.log(item);\r\n      this.totalItemsToBuy += item.cantidad;\r\n      this.subTotal += item.producto.precio*item.cantidad;\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}